[1/10] Performing build step for 'bootloader'
[1/1] cd /home/shashwat/lidar/build/bootloader/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/shashwat/lidar/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lidar.c.obj
/home/shashwat/lidar/main/lidar.c: In function 'lidar_task':
/home/shashwat/lidar/main/lidar.c:29:11: warning: unused variable 'temperature' [-Wunused-variable]
   29 |     float temperature;
      |           ^~~~~~~~~~~
/home/shashwat/lidar/main/lidar.c:28:15: warning: unused variable 'strength' [-Wunused-variable]
   28 |     int dist, strength;
      |               ^~~~~~~~
/home/shashwat/lidar/main/lidar.c:28:9: warning: unused variable 'dist' [-Wunused-variable]
   28 |     int dist, strength;
      |         ^~~~
/home/shashwat/lidar/main/lidar.c: At top level:
/home/shashwat/lidar/main/lidar.c:12:20: warning: 'TAG' defined but not used [-Wunused-variable]
   12 | static const char *TAG = "LIDAR";
      |                    ^~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable lidar.elf
[6/8] Generating binary image from built executable
esptool.py vv4.8.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/shashwat/lidar/build/lidar.bin
[7/8] cd /home/shashwat/lidar/build/esp-idf/esptool_py && /home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/shashwat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/shashwat/lidar/build/partition_table/partition-table.bin /home/shashwat/lidar/build/lidar.bin
lidar.bin binary size 0x2da80 bytes. Smallest app partition is 0x100000 bytes. 0xd2580 bytes (82%) free.
[7/8] cd /home/shashwat/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/shashwat/esp/esp-idf -D "SERIAL_TOOL=/home/shashwat/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/shashwat/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/shashwat/lidar/build -P /home/shashwat/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 lidar.bin 0x8000 partition_table/partition-table.bin
esptool.py vv4.8.dev1
Serial port /dev/ttyUSB0
Connecting.......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: 40:91:51:fc:33:38
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26704 bytes to 16374...
Writing at 0x00001000... (100 %)
Wrote 26704 bytes (16374 compressed) at 0x00001000 in 1.0 seconds (effective 212.4 kbit/s)...
Hash of data verified.
Compressed 187008 bytes to 99422...
Writing at 0x00010000... (14 %)
Writing at 0x0001ca82... (28 %)
Writing at 0x00022466... (42 %)
Writing at 0x00028217... (57 %)
Writing at 0x0002fa8d... (71 %)
Writing at 0x00036d56... (85 %)
Writing at 0x0003d345... (100 %)
Wrote 187008 bytes (99422 compressed) at 0x00010000 in 3.1 seconds (effective 481.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 267.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
